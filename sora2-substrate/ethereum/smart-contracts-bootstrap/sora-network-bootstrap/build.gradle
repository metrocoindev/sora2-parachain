/*
 * Copyright D3 Ledger, Inc. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */

buildscript {
    ext.ktor_version = '1.0.0'
    ext.springfoxSwagger2Version = '2.9.2'
    ext.springBootVersion = '2.3.3.RELEASE'
    ext.ethVersion = '4e9674d48571339424b9a874057567c576338254'
    ext.chain_adapter_client_version = '92b2ee269f7848042a78f57e1afcd030a4a4dc11'
    ext.notary_version = 'e24bbd67347d2f6d3601d29c7dd5149405e16033'
    ext.changelog_version = '0.0.2'
    ext.iroha_java_version = '6.2.0'
    ext.web3j_version = '4.5.16'

    repositories {
        mavenCentral()
        jcenter()
        // gradle plugins repository
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.1'

        //Spring-boot
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

plugins {
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.21"
    id 'jp.co.soramitsu.sora-plugin' version '0.1.2'
}

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
shadowDistZip.classifier = 'shadow'
shadowDistTar.classifier = 'shadow'

group 'd3'
mainClassName = "jp.co.soramitsu.bootstrap.BootstrapMain"

// name of jar file that the shadowJar plugin generates
shadowJar.archiveName = 'app.jar'

// sora-plugin configs
soramitsu {
    projectGroup = 'soranet'
    docker {
        // docker tag
        tag = System.getenv("DOCKER_TAG")
        // jar file that is used in the generated Dockerfile
        jar = new File("build/libs/app.jar")
        // the rest in configured using env variables
    }
}

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/ethereum/maven' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    api("com.github.soramitsu.soranet-eth:eth-core:$ethVersion") {
        exclude group: 'com.github.soramitsu.soranet-validator', module:'notary-commons'
    }
    api("com.github.soramitsu.soranet-validator:notary-commons:$notary_version")
    api "org.web3j:contracts:$web3j_version"
    implementation("com.github.soramitsu.chain-adapter:chain-adapter-client:$chain_adapter_client_version")
    implementation "org.web3j:core:$web3j_version"

    // kotlin related
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //Iroha-java related
    implementation("com.github.hyperledger.iroha-java:client:$iroha_java_version")
    implementation("com.github.hyperledger.iroha-java:testcontainers:$iroha_java_version") {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

    //Spring-boot
    implementation("org.springframework.boot:spring-boot-starter:$springBootVersion") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'org.hibernate'
    }
    implementation "io.springfox:springfox-swagger2:$springfoxSwagger2Version"
    implementation "io.springfox:springfox-swagger-ui:$springfoxSwagger2Version"

    // Changelog interface
    implementation("com.github.d3ledger.bootstrap-changelog:changelog-interface:$changelog_version")

    implementation("org.springframework.boot:spring-boot-starter-jetty:$springBootVersion") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.12.+"

    implementation 'com.google.protobuf:protobuf-java-util:3.6.1'

    testImplementation("org.springframework.boot:spring-boot-starter-test:$springBootVersion") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    testImplementation("org.apache.httpcomponents:httpclient:4.5.3")
}

task runBootstrap(type: JavaExec) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

project.afterEvaluate {
    dockerfileCreate.dependsOn(shadowJar)
}
